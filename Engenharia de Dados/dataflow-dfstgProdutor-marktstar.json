{
    "name": "dfstgProdutor",
    "properties": {
        "folder": {
            "name": "02 - STAGE"
        },
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "tblsrcProdutor",
                        "type": "DatasetReference"
                    },
                    "name": "SOURCE"
                },
                {
                    "dataset": {
                        "referenceName": "tblStgProdutor",
                        "type": "DatasetReference"
                    },
                    "name": "Stage"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "tblStgProdutor",
                        "type": "DatasetReference"
                    },
                    "name": "stageNew"
                },
                {
                    "dataset": {
                        "referenceName": "tblStgProdutor",
                        "type": "DatasetReference"
                    },
                    "name": "StageUpdate"
                },
                {
                    "dataset": {
                        "referenceName": "tblStgProdutor",
                        "type": "DatasetReference"
                    },
                    "name": "StageInativar"
                }
            ],
            "transformations": [
                {
                    "name": "ClassSource"
                },
                {
                    "name": "newSource"
                },
                {
                    "name": "classStage"
                },
                {
                    "name": "newStage"
                },
                {
                    "name": "Ativos"
                },
                {
                    "name": "join1"
                },
                {
                    "name": "dataIni"
                },
                {
                    "name": "split1"
                },
                {
                    "name": "alterRow1"
                }
            ],
            "scriptLines": [
                "source(output(",
                "          Id as integer,",
                "          Nome as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table') ~> SOURCE",
                "source(output(",
                "          Id as integer,",
                "          BK as integer,",
                "          Nome as string,",
                "          DataInicio as date,",
                "          DataFim as date",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table') ~> Stage",
                "SOURCE sort(asc(Id, true)) ~> ClassSource",
                "ClassSource select(mapColumn(",
                "          Id_SRC = Id,",
                "          Nome_SRC = Nome",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> newSource",
                "Ativos sort(asc(BK, true)) ~> classStage",
                "classStage select(mapColumn(",
                "          Id_STG = Id,",
                "          BK_STG = BK,",
                "          Nome_STG = Nome,",
                "          DataInicio_STG = DataInicio,",
                "          DataFim_STG = DataFim",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> newStage",
                "Stage filter(isNull(DataFim)) ~> Ativos",
                "newSource, newStage join(Id_SRC == BK_STG,",
                "     joinType:'left',",
                "     matchType:'exact',",
                "     ignoreSpaces: false,",
                "     broadcast: 'auto')~> join1",
                "join1 derive(dataStartEnd = toDate(currentTimestamp())) ~> dataIni",
                "dataIni split(isNull(BK_STG),",
                "     (Id_SRC == BK_STG) && (Nome_SRC != Nome_STG),",
                "     (Id_SRC == BK_STG) && (Nome_SRC != Nome_STG),",
                "     disjoint: true) ~> split1@(novosRegistros, UPDATE, INATIVAR)",
                "split1@INATIVAR alterRow(updateIf((Id_SRC==BK_STG)&&(Nome_SRC!=Nome_STG))) ~> alterRow1",
                "split1@novosRegistros sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     input(",
                "          Id as integer,",
                "          BK as integer,",
                "          Nome as string,",
                "          DataInicio as date,",
                "          DataFim as date",
                "     ),",
                "     deletable:false,",
                "     insertable:true,",
                "     updateable:false,",
                "     upsertable:false,",
                "     format: 'table',",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     errorHandlingOption: 'stopOnFirstError',",
                "     mapColumn(",
                "          BK = Id_SRC,",
                "          Nome = Nome_SRC,",
                "          DataInicio = dataStartEnd",
                "     )) ~> stageNew",
                "split1@UPDATE sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     input(",
                "          Id as integer,",
                "          BK as integer,",
                "          Nome as string,",
                "          DataInicio as date,",
                "          DataFim as date",
                "     ),",
                "     deletable:false,",
                "     insertable:true,",
                "     updateable:false,",
                "     upsertable:false,",
                "     format: 'table',",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     errorHandlingOption: 'stopOnFirstError',",
                "     mapColumn(",
                "          BK = BK_STG,",
                "          Nome = Nome_SRC,",
                "          DataInicio = dataStartEnd",
                "     )) ~> StageUpdate",
                "alterRow1 sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     input(",
                "          Id as integer,",
                "          BK as integer,",
                "          Nome as string,",
                "          DataInicio as date,",
                "          DataFim as date",
                "     ),",
                "     deletable:false,",
                "     insertable:false,",
                "     updateable:true,",
                "     upsertable:false,",
                "     keys:['Id'],",
                "     format: 'table',",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     errorHandlingOption: 'stopOnFirstError',",
                "     mapColumn(",
                "          Id = Id_SRC,",
                "          BK = BK_STG,",
                "          Nome = Nome_SRC,",
                "          DataInicio = DataInicio_STG,",
                "          DataFim = dataStartEnd",
                "     )) ~> StageInativar"
            ]
        }
    }
}